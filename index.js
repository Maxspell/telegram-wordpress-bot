#!/usr/bin/env node

const TelegramBot = require('./bot');
const logger = require('./utils/logger');
const WordPressAPI = require('./services/wordpressAPI');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('uncaughtException', (error) => {
    logger.error('Uncaught Exception:', error);
    process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
    logger.error('Unhandled Rejection at:', promise, 'reason:', reason);
    process.exit(1);
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function validateEnvironment() {
    const requiredVars = [
        'BOT_TOKEN',
        'WORDPRESS_URL',
        'WP_API_KEY',
        'WP_API_SECRET'
    ];

    const missing = requiredVars.filter(varName => !process.env[varName]);
    
    if (missing.length > 0) {
        logger.error('Missing required environment variables:', missing);
        console.error('‚ùå Missing required environment variables:');
        missing.forEach(varName => {
            console.error(`   - ${varName}`);
        });
        console.error('\nPlease check your .env file or environment variables.');
        process.exit(1);
    }

    logger.info('Environment validation passed');
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WordPress
async function checkWordPressConnection() {
    try {
        logger.info('Checking WordPress API connection...');
        const wpAPI = new WordPressAPI();
        const isHealthy = await wpAPI.healthCheck();
        
        if (!isHealthy) {
            throw new Error('WordPress API health check failed');
        }
        
        logger.info('‚úÖ WordPress API connection successful');
        return true;
    } catch (error) {
        logger.error('‚ùå WordPress API connection failed:', error.message);
        console.error('Failed to connect to WordPress API. Please check:');
        console.error('- WordPress URL is correct and accessible');
        console.error('- API credentials are valid');
        console.error('- WordPress plugin is installed and activated');
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async function main() {
    try {
        console.log('üöÄ Starting Telegram Bot...\n');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        validateEnvironment();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WordPress
        const wpConnected = await checkWordPressConnection();
        
        if (!wpConnected) {
            console.log('\n‚ö†Ô∏è  Warning: WordPress connection failed, but bot will start anyway.');
            console.log('   Make sure to fix WordPress connection for full functionality.\n');
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        const bot = new TelegramBot();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        const gracefulShutdown = (signal) => {
            logger.info(`Received ${signal}, shutting down gracefully...`);
            console.log(`\nüì¥ Received ${signal}, shutting down gracefully...`);
            
            bot.bot.stop(signal)
                .then(() => {
                    logger.info('Bot stopped successfully');
                    console.log('‚úÖ Bot stopped successfully');
                    process.exit(0);
                })
                .catch((error) => {
                    logger.error('Error stopping bot:', error);
                    console.error('‚ùå Error stopping bot:', error.message);
                    process.exit(1);
                });
        };

        process.on('SIGINT', () => gracefulShutdown('SIGINT'));
        process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot.start();
        
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
        console.log('‚úÖ Bot started successfully!');
        console.log('üìä Monitoring:');
        console.log(`   - Logs: ./logs/combined.log`);
        console.log(`   - Environment: ${process.env.NODE_ENV || 'development'}`);
        console.log(`   - Process ID: ${process.pid}`);
        console.log('\nüîÑ Bot is running... Press Ctrl+C to stop\n');
        
        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
        setInterval(async () => {
            try {
                const wpAPI = new WordPressAPI();
                const isHealthy = await wpAPI.healthCheck();
                
                if (!isHealthy) {
                    logger.warn('WordPress API health check failed during runtime');
                }
            } catch (error) {
                logger.warn('Health check error:', error.message);
            }
        }, 5 * 60 * 1000); // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

    } catch (error) {
        logger.error('Failed to start bot:', error);
        console.error('‚ùå Failed to start bot:', error.message);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if (require.main === module) {
    main().catch(error => {
        logger.error('Startup error:', error);
        console.error('‚ùå Startup error:', error.message);
        process.exit(1);
    });
}

module.exports = { main };